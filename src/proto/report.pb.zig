// Code generated by protoc-gen-zig
///! package report
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;

pub const ReportRequest = struct {
    actor_id: i64 = 0,
    categories: ArrayList(Category),
    description: ManagedString = .Empty,

    pub const _desc_table = .{
        .actor_id = fd(1, .{ .Varint = .Simple }),
        .categories = fd(2, .{ .List = .{ .Varint = .Simple } }),
        .description = fd(3, .String),
    };

    pub const Category = enum(i32) {
        CHEATING = 0,
        ILLEGAL_TRADE = 1,
        ILLEGAL_PROMOTE = 2,
        EXPLOITING = 3,
        OFFENSIVE_NAME = 4,
        VERBAL_ABUSE = 5,
        PHISHING = 6,
        MONO_ACCOUNT = 7,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReportResponse = struct {
    success: bool = false,
    @"error": Error = @enumFromInt(0),

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
        .@"error" = fd(2, .{ .Varint = .Simple }),
    };

    pub const Error = enum(i32) {
        UNKNOWN = 0,
        SUBSCRIPTION_REQUIRED = 1,
        BAD_LEVEL = 2,
        LIMIT_EXCEEDED = 3,
        NOT_ENABLED = 4,
        ALREADY_REPORTED = 5,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
