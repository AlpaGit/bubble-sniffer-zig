// Code generated by protoc-gen-zig
///! package com.ankama.dofus.server.game.protocol.connection
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;

pub const IdentificationRequest = struct {
    ticket_key: ManagedString = .Empty,
    language_code: ManagedString = .Empty,

    pub const _desc_table = .{
        .ticket_key = fd(1, .String),
        .language_code = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReloginRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PingRequest = struct {
    quiet: bool = false,

    pub const _desc_table = .{
        .quiet = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PongEvent = struct {
    quiet: bool = false,

    pub const _desc_table = .{
        .quiet = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AuthenticationTicketAcceptedEvent = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlreadyConnectedEvent = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReconnectToGameServerEvent = struct {
    valid_token: bool = false,
    token: ManagedString = .Empty,
    server_id: i32 = 0,

    pub const _desc_table = .{
        .valid_token = fd(1, .{ .Varint = .Simple }),
        .token = fd(2, .String),
        .server_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OptionalFeaturesEvent = struct {
    features: ArrayList(i32),

    pub const _desc_table = .{
        .features = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReloginTokenEvent = struct {
    valid_token: bool = false,
    token: ManagedString = .Empty,

    pub const _desc_table = .{
        .valid_token = fd(1, .{ .Varint = .Simple }),
        .token = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QueueStatusEvent = struct {
    position: i32 = 0,
    total: i32 = 0,

    pub const _desc_table = .{
        .position = fd(1, .{ .Varint = .Simple }),
        .total = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AuthenticationTicketRefusedEvent = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};
