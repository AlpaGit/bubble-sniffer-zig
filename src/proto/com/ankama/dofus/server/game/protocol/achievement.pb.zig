// Code generated by protoc-gen-zig
///! package com.ankama.dofus.server.game.protocol.achievement
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;

pub const AchievementDetailsRequest = struct {
    achievement_id: i32 = 0,

    pub const _desc_table = .{
        .achievement_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievementsDetailedRequest = struct {
    category_id: i32 = 0,

    pub const _desc_table = .{
        .category_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievementsAlmostFinishedDetailedRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievementRewardRequest = struct {
    achievement_id: i32 = 0,

    pub const _desc_table = .{
        .achievement_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievementsEvent = struct {
    achieved_achievements: ArrayList(AchievedAchievement),

    pub const _desc_table = .{
        .achieved_achievements = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievementDetailsEvent = struct {
    achievement: ?Achievement = null,

    pub const _desc_table = .{
        .achievement = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievementsDetailedEvent = struct {
    achievements: ArrayList(Achievement),

    pub const _desc_table = .{
        .achievements = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievementsAlmostFinishedDetailedEvent = struct {
    almost_finished_achievements: ArrayList(Achievement),

    pub const _desc_table = .{
        .almost_finished_achievements = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievementFinishedEvent = struct {
    achievement: ?AchievedAchievement = null,

    pub const _desc_table = .{
        .achievement = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievementFinishedInformationEvent = struct {
    achievement: ?AchievedAchievement = null,
    player_name: ManagedString = .Empty,
    player_id: i64 = 0,

    pub const _desc_table = .{
        .achievement = fd(1, .{ .SubMessage = {} }),
        .player_name = fd(2, .String),
        .player_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievementRewardResultEvent = struct {
    achievement_id: i32 = 0,
    success: bool = false,

    pub const _desc_table = .{
        .achievement_id = fd(1, .{ .Varint = .Simple }),
        .success = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievementsPioneerRanksRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievementsPioneerRanksResponse = struct {
    achievements_pioneer_ranks: ArrayList(AchievementPioneerRank),

    pub const _desc_table = .{
        .achievements_pioneer_ranks = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const AchievementPioneerRank = struct {
        achievement_id: i32 = 0,
        pioneer_rank: i32 = 0,

        pub const _desc_table = .{
            .achievement_id = fd(1, .{ .Varint = .Simple }),
            .pioneer_rank = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Achievement = struct {
    achievement_id: i32 = 0,
    achievement_objectives: ArrayList(AchievementObjective),

    pub const _desc_table = .{
        .achievement_id = fd(1, .{ .Varint = .Simple }),
        .achievement_objectives = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const AchievementObjective = struct {
        objective_id: i32 = 0,
        max_value: i64 = 0,
        current_value: ?i64 = null,

        pub const _desc_table = .{
            .objective_id = fd(1, .{ .Varint = .Simple }),
            .max_value = fd(2, .{ .Varint = .Simple }),
            .current_value = fd(3, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AchievedAchievement = struct {
    achievement_id: i32 = 0,
    achieved_by: i64 = 0,
    pioneer_rank: i32 = 0,
    finished_level: ?i32 = null,

    pub const _desc_table = .{
        .achievement_id = fd(1, .{ .Varint = .Simple }),
        .achieved_by = fd(2, .{ .Varint = .Simple }),
        .pioneer_rank = fd(4, .{ .Varint = .Simple }),
        .finished_level = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
