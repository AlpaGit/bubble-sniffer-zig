// Code generated by protoc-gen-zig
///! package com.ankama.dofus.server.game.protocol.cosmetic
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;
/// import package com.ankama.dofus.server.game.protocol.common
const com_ankama_dofus_server_game_protocol_common = @import("common.pb.zig");

pub const CharacterAppearancesRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterAppearancesResponse = struct {
    character_faces: ?CharacterFaces = null,
    character_colors: ?CharacterColors = null,

    pub const _desc_table = .{
        .character_faces = fd(1, .{ .SubMessage = {} }),
        .character_colors = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterAppearanceCollectionEvent = struct {
    character_faces: ?CharacterFaces = null,
    character_colors: ?CharacterColors = null,

    pub const _desc_table = .{
        .character_faces = fd(1, .{ .SubMessage = {} }),
        .character_colors = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterFaces = struct {
    slots: i32 = 0,
    faces: ArrayList(i32),
    max_slots: i32 = 0,

    pub const _desc_table = .{
        .slots = fd(1, .{ .Varint = .Simple }),
        .faces = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .max_slots = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterColors = struct {
    slots: i32 = 0,
    color_palettes: ArrayList(ColorPalette),
    max_slots: i32 = 0,

    pub const _desc_table = .{
        .slots = fd(1, .{ .Varint = .Simple }),
        .color_palettes = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .max_slots = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ColorPalette = struct {
    colors: ArrayList(i32),

    pub const _desc_table = .{
        .colors = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterUpdateFaceRequest = struct {
    face_id: i32 = 0,
    slot: i32 = 0,

    pub const _desc_table = .{
        .face_id = fd(1, .{ .Varint = .Simple }),
        .slot = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterFaceUpdatedEvent = struct {
    face_id: i32 = 0,
    slot: i32 = 0,

    pub const _desc_table = .{
        .face_id = fd(1, .{ .Varint = .Simple }),
        .slot = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterUpdateColorsRequest = struct {
    colors: ArrayList(i32),
    slot: i32 = 0,

    pub const _desc_table = .{
        .colors = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .slot = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterColorsUpdatedEvent = struct {
    colors: ArrayList(i32),
    slot: i32 = 0,

    pub const _desc_table = .{
        .colors = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .slot = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ObjectSlot = enum(i32) {
    AMULET = 0,
    RING_LEFT = 1,
    RING_RIGHT = 2,
    BELT = 3,
    BOOTS = 4,
    PETMOUNT = 5,
    DRAGOTURKEY = 6,
    RHINEETLE = 7,
    SEEMYOOL = 8,
    CAPE = 9,
    HAT = 10,
    PET = 11,
    SHIELD = 12,
    BOW = 13,
    WAND = 14,
    STAFF = 15,
    DAGGER = 16,
    SCYTHE = 17,
    AXE = 18,
    LANCE = 19,
    HAMMER = 20,
    SHOVEL = 21,
    SWORD = 22,
    DISGUISE = 23,
    WINGS = 24,
    SHOULDERS = 25,
    _,
};

pub const CosmeticInventoryLoadedEvent = struct {
    objects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectItem),

    pub const _desc_table = .{
        .objects = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CosmeticInventoryAddObjectRequest = struct {
    uid: i32 = 0,

    pub const _desc_table = .{
        .uid = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CosmeticInventoryAddObjectResponse = struct {
    result: Result = @enumFromInt(0),

    pub const _desc_table = .{
        .result = fd(1, .{ .Varint = .Simple }),
    };

    pub const Result = enum(i32) {
        ERROR = 0,
        DUPLICATE = 1,
        SUCCESS = 2,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CosmeticInventoryPopObjectRequest = struct {
    gid: i32 = 0,

    pub const _desc_table = .{
        .gid = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CosmeticInventoryPopObjectResponse = struct {
    success: bool = false,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CosmeticInventoryAddedEvent = struct {
    object: ?com_ankama_dofus_server_game_protocol_common.ObjectItem = null,

    pub const _desc_table = .{
        .object = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CosmeticInventoryLivingObjectFeedRequest = struct {
    gid: i32 = 0,
    food_object_uid: i32 = 0,

    pub const _desc_table = .{
        .gid = fd(1, .{ .Varint = .Simple }),
        .food_object_uid = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CosmeticInventoryLivingObjectFeedResponse = struct {
    success: bool = false,
    living_object_fed: ?com_ankama_dofus_server_game_protocol_common.ObjectItem = null,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
        .living_object_fed = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipAuraRequest = struct {
    emote_id: ?i32 = null,

    pub const _desc_table = .{
        .emote_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipAuraResponse = struct {
    success: bool = false,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitAuraChangedEvent = struct {
    emote_id: ?i32 = null,

    pub const _desc_table = .{
        .emote_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipTitleRequest = struct {
    title_id: ?i32 = null,

    pub const _desc_table = .{
        .title_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipTitleResponse = struct {
    success: bool = false,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipOrnamentRequest = struct {
    ornament_id: ?i32 = null,

    pub const _desc_table = .{
        .ornament_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipOrnamentResponse = struct {
    success: bool = false,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipObjectRequest = struct {
    slot: ObjectSlot = @enumFromInt(0),
    gid: ?i32 = null,
    skin_id: ?i32 = null,

    pub const _desc_table = .{
        .slot = fd(2, .{ .Varint = .Simple }),
        .gid = fd(1, .{ .Varint = .Simple }),
        .skin_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipObjectResponse = struct {
    success: bool = false,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipObjectBestSlotRequest = struct {
    gid: i32 = 0,
    skin_id: ?i32 = null,

    pub const _desc_table = .{
        .gid = fd(1, .{ .Varint = .Simple }),
        .skin_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipObjectBestSlotResponse = struct {
    success: bool = false,
    slot: ?ObjectSlot = null,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
        .slot = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipFaceRequest = struct {
    face_id: i32 = 0,

    pub const _desc_table = .{
        .face_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipFaceResponse = struct {
    success: bool = false,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipColorsRequest = struct {
    color_palette: ?ColorPalette = null,

    pub const _desc_table = .{
        .color_palette = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipColorsResponse = struct {
    success: bool = false,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitUpdateRequest = struct {
    outfit_uuid: ManagedString = .Empty,
    name: ManagedString = .Empty,
    pictogram_id: i32 = 0,
    favorite: bool = false,

    pub const _desc_table = .{
        .outfit_uuid = fd(1, .String),
        .name = fd(2, .String),
        .pictogram_id = fd(3, .{ .Varint = .Simple }),
        .favorite = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitUpdateResponse = struct {
    success: bool = false,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitCreateEmptyRequest = struct {
    name: ManagedString = .Empty,
    pictogram_id: i32 = 0,
    face_id: i32 = 0,
    color_palette: ?ColorPalette = null,

    pub const _desc_table = .{
        .name = fd(1, .String),
        .pictogram_id = fd(2, .{ .Varint = .Simple }),
        .face_id = fd(3, .{ .Varint = .Simple }),
        .color_palette = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitDuplicateRequest = struct {
    outfit_uuid: ManagedString = .Empty,
    name: ManagedString = .Empty,
    pictogram_id: i32 = 0,

    pub const _desc_table = .{
        .outfit_uuid = fd(1, .String),
        .name = fd(2, .String),
        .pictogram_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitCreationResponse = struct {
    success: bool = false,
    outfit_created: ?Outfit = null,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
        .outfit_created = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitRemoveRequest = struct {
    outfit_uuid: ManagedString = .Empty,

    pub const _desc_table = .{
        .outfit_uuid = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitRemoveResponse = struct {
    success: bool = false,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipRequest = struct {
    outfit_uuid: ManagedString = .Empty,

    pub const _desc_table = .{
        .outfit_uuid = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEquipResponse = struct {
    success: bool = false,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitsLoadedEvent = struct {
    current: ?Outfit = null,
    outfits: ArrayList(Outfit),

    pub const _desc_table = .{
        .current = fd(1, .{ .SubMessage = {} }),
        .outfits = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OutfitEntityLookChangedEvent = struct {
    outfit_uuid: ManagedString = .Empty,
    entity_look: ?com_ankama_dofus_server_game_protocol_common.EntityLook = null,

    pub const _desc_table = .{
        .outfit_uuid = fd(1, .String),
        .entity_look = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Outfit = struct {
    uuid: ManagedString = .Empty,
    name: ManagedString = .Empty,
    pictogram_id: i32 = 0,
    objects: ArrayList(ObjectsEntry),
    favorite: bool = false,
    last_modified: ManagedString = .Empty,
    face_id: i32 = 0,
    color_palette: ?ColorPalette = null,
    aura_emote_id: ?i32 = null,
    ornament_id: ?i32 = null,
    title_id: ?i32 = null,
    entity_look: ?com_ankama_dofus_server_game_protocol_common.EntityLook = null,

    pub const _desc_table = .{
        .uuid = fd(1, .String),
        .name = fd(2, .String),
        .pictogram_id = fd(3, .{ .Varint = .Simple }),
        .objects = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .favorite = fd(9, .{ .Varint = .Simple }),
        .last_modified = fd(10, .String),
        .face_id = fd(11, .{ .Varint = .Simple }),
        .color_palette = fd(12, .{ .SubMessage = {} }),
        .aura_emote_id = fd(5, .{ .Varint = .Simple }),
        .ornament_id = fd(6, .{ .Varint = .Simple }),
        .title_id = fd(7, .{ .Varint = .Simple }),
        .entity_look = fd(8, .{ .SubMessage = {} }),
    };

    pub const ObjectsEntry = struct {
        key: i32 = 0,
        value: ?Outfit.SkinOutfit = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const SkinOutfit = struct {
        gid: i32 = 0,
        skin: ?i32 = null,

        pub const _desc_table = .{
            .gid = fd(1, .{ .Varint = .Simple }),
            .skin = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
