// Code generated by protoc-gen-zig
///! package com.ankama.dofus.server.game.protocol.alliance.recruitment
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;
/// import package com.ankama.dofus.server.game.protocol.common
const com_ankama_dofus_server_game_protocol_common = @import("../common.pb.zig");

pub const AllianceRecruitmentInformationRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceRecruitmentUpdateRequest = struct {
    information: ?com_ankama_dofus_server_game_protocol_common.AllianceRecruitmentInformation = null,

    pub const _desc_table = .{
        .information = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceRecruitmentInformationEvent = struct {
    information: ?com_ankama_dofus_server_game_protocol_common.AllianceRecruitmentInformation = null,

    pub const _desc_table = .{
        .information = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceRecruitmentAutomaticJoinRequest = struct {
    alliance_uid: ManagedString = .Empty,

    pub const _desc_table = .{
        .alliance_uid = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceRecruitmentInvalidateEvent = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationSubmitRequest = struct {
    alliance_uid: ManagedString = .Empty,
    text: ManagedString = .Empty,

    pub const _desc_table = .{
        .alliance_uid = fd(1, .String),
        .text = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationUpdateRequest = struct {
    alliance_uid: ManagedString = .Empty,
    text: ManagedString = .Empty,

    pub const _desc_table = .{
        .alliance_uid = fd(1, .String),
        .text = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationDeletionRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationListenRequest = struct {
    state: bool = false,

    pub const _desc_table = .{
        .state = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationListRequest = struct {
    offset: i64 = 0,
    count: i64 = 0,

    pub const _desc_table = .{
        .offset = fd(1, .{ .Varint = .Simple }),
        .count = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationAnswerRequest = struct {
    player_id: i64 = 0,
    accepted: bool = false,

    pub const _desc_table = .{
        .player_id = fd(1, .{ .Varint = .Simple }),
        .accepted = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationPresenceRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationDeletedEvent = struct {
    success: bool = false,

    pub const _desc_table = .{
        .success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationInformationEvent = struct {
    alliance: ?com_ankama_dofus_server_game_protocol_common.AllianceInformation = null,
    application_information: ?com_ankama_dofus_server_game_protocol_common.SocialApplicationInformation = null,

    pub const _desc_table = .{
        .alliance = fd(1, .{ .SubMessage = {} }),
        .application_information = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationNoInformationEvent = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationResponseEvent = struct {
    accepted: bool = false,
    alliance_information: ?com_ankama_dofus_server_game_protocol_common.AllianceInformation = null,

    pub const _desc_table = .{
        .accepted = fd(1, .{ .Varint = .Simple }),
        .alliance_information = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationListEvent = struct {
    offset: i64 = 0,
    count: i64 = 0,
    total: i64 = 0,
    applies: ArrayList(com_ankama_dofus_server_game_protocol_common.SocialApplicationInformation),

    pub const _desc_table = .{
        .offset = fd(1, .{ .Varint = .Simple }),
        .count = fd(2, .{ .Varint = .Simple }),
        .total = fd(3, .{ .Varint = .Simple }),
        .applies = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationModifiedEvent = struct {
    apply: ?com_ankama_dofus_server_game_protocol_common.SocialApplicationInformation = null,
    state: com_ankama_dofus_server_game_protocol_common.SocialApplicationState = @enumFromInt(0),
    player_id: i64 = 0,

    pub const _desc_table = .{
        .apply = fd(1, .{ .SubMessage = {} }),
        .state = fd(2, .{ .Varint = .Simple }),
        .player_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationReceivedEvent = struct {
    player_name: ManagedString = .Empty,
    player_id: i64 = 0,

    pub const _desc_table = .{
        .player_name = fd(1, .String),
        .player_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AllianceApplicationPresenceEvent = struct {
    presence: bool = false,

    pub const _desc_table = .{
        .presence = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
