// Code generated by protoc-gen-zig
///! package com.ankama.dofus.server.game.protocol.preset
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;
/// import package com.ankama.dofus.server.game.protocol.common
const com_ankama_dofus_server_game_protocol_common = @import("common.pb.zig");

pub const CharacterPresetInfo = struct {
    uuid: ManagedString = .Empty,
    name: ManagedString = .Empty,
    symbol_id: i32 = 0,
    is_favorite: bool = false,
    last_modification_date: ManagedString = .Empty,
    equipment_by_position: ArrayList(EquipmentByPositionEntry),
    spell_preset: ?SpellPreset = null,
    characteristics_info: ?CharacteristicsInfo = null,
    preset_look: ?PresetLook = null,
    ride: ?Ride = null,
    outfit_uuid: ?ManagedString = null,

    pub const _desc_table = .{
        .uuid = fd(1, .String),
        .name = fd(2, .String),
        .symbol_id = fd(3, .{ .Varint = .Simple }),
        .is_favorite = fd(4, .{ .Varint = .Simple }),
        .last_modification_date = fd(5, .String),
        .equipment_by_position = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .spell_preset = fd(7, .{ .SubMessage = {} }),
        .characteristics_info = fd(8, .{ .SubMessage = {} }),
        .preset_look = fd(9, .{ .SubMessage = {} }),
        .ride = fd(10, .{ .SubMessage = {} }),
        .outfit_uuid = fd(11, .String),
    };

    pub const EquipmentByPositionEntry = struct {
        key: i32 = 0,
        value: ?Equipment = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ForgettableSpellPresetInfo = struct {
    uuid: ManagedString = .Empty,
    name: ManagedString = .Empty,
    symbol_id: i32 = 0,
    is_favorite: bool = false,
    last_modification_date: ManagedString = .Empty,
    spell_preset: ?SpellPreset = null,
    forgettable_spell_info_by_id: ArrayList(ForgettableSpellInfoByIdEntry),

    pub const _desc_table = .{
        .uuid = fd(1, .String),
        .name = fd(2, .String),
        .symbol_id = fd(3, .{ .Varint = .Simple }),
        .is_favorite = fd(4, .{ .Varint = .Simple }),
        .last_modification_date = fd(5, .String),
        .spell_preset = fd(6, .{ .SubMessage = {} }),
        .forgettable_spell_info_by_id = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const ForgettableSpellInfoByIdEntry = struct {
        key: i32 = 0,
        value: ?ForgettableSpellInfo = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetLook = struct {
    look_with_outfit: ?com_ankama_dofus_server_game_protocol_common.EntityLook = null,
    look_without_outfit: ?com_ankama_dofus_server_game_protocol_common.EntityLook = null,

    pub const _desc_table = .{
        .look_with_outfit = fd(1, .{ .SubMessage = {} }),
        .look_without_outfit = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacteristicsInfo = struct {
    characteristic_details_by_id: ArrayList(CharacteristicDetailsByIdEntry),

    pub const _desc_table = .{
        .characteristic_details_by_id = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const CharacteristicDetailsByIdEntry = struct {
        key: i32 = 0,
        value: ?CharacteristicsInfo.CharacteristicsDetails = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const CharacteristicsDetails = struct {
        from_base: i32 = 0,
        from_allocated: i32 = 0,
        from_equipment: i32 = 0,
        from_bonus: i32 = 0,
        from_initial_bonus: i32 = 0,
        limit: ?i32 = null,

        pub const _desc_table = .{
            .from_base = fd(2, .{ .Varint = .Simple }),
            .from_allocated = fd(3, .{ .Varint = .Simple }),
            .from_equipment = fd(4, .{ .Varint = .Simple }),
            .from_bonus = fd(5, .{ .Varint = .Simple }),
            .from_initial_bonus = fd(6, .{ .Varint = .Simple }),
            .limit = fd(1, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Equipment = struct {
    gid: i32 = 0,
    effects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectEffect),
    uid: ?i32 = null,

    pub const _desc_table = .{
        .gid = fd(1, .{ .Varint = .Simple }),
        .effects = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .uid = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Ride = struct {
    model_id: i32 = 0,
    level: i32 = 0,
    is_current_ride: bool = false,

    pub const _desc_table = .{
        .model_id = fd(1, .{ .Varint = .Simple }),
        .level = fd(2, .{ .Varint = .Simple }),
        .is_current_ride = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpellPositions = struct {
    positions: ArrayList(i32),

    pub const _desc_table = .{
        .positions = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ForgettableSpellInfo = struct {
    spell_positions: ?SpellPositions = null,
    is_missing: bool = false,

    pub const _desc_table = .{
        .spell_positions = fd(1, .{ .SubMessage = {} }),
        .is_missing = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpellPreset = struct {
    spell_positions_by_id: ArrayList(SpellPositionsByIdEntry),

    pub const _desc_table = .{
        .spell_positions_by_id = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const SpellPositionsByIdEntry = struct {
        key: i32 = 0,
        value: ?SpellPositions = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetOrigin = struct {
    origin: ?origin_union,

    pub const _origin_case = enum {
        empty,
        player,
        clone,
    };
    pub const origin_union = union(_origin_case) {
        empty: EmptyPreset,
        player: PlayerCopy,
        clone: PresetClone,
        pub const _union_desc = .{
            .empty = fd(1, .{ .SubMessage = {} }),
            .player = fd(2, .{ .SubMessage = {} }),
            .clone = fd(3, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .origin = fd(null, .{ .OneOf = origin_union }),
    };

    pub const EmptyPreset = struct {
        pub const _desc_table = .{};

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const PlayerCopy = struct {
        pub const _desc_table = .{};

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const PresetClone = struct {
        preset_uuid_to_clone: ManagedString = .Empty,

        pub const _desc_table = .{
            .preset_uuid_to_clone = fd(1, .String),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterPresetCreateRequest = struct {
    name: ManagedString = .Empty,
    symbol_id: i32 = 0,
    origin: ?PresetOrigin = null,

    pub const _desc_table = .{
        .name = fd(1, .String),
        .symbol_id = fd(2, .{ .Varint = .Simple }),
        .origin = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterPresetCreateResponse = struct {
    result: ?result_union,

    pub const _result_case = enum {
        success,
        @"error",
    };
    pub const result_union = union(_result_case) {
        success: Success,
        @"error": Error,
        pub const _union_desc = .{
            .success = fd(1, .{ .SubMessage = {} }),
            .@"error" = fd(2, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .result = fd(null, .{ .OneOf = result_union }),
    };

    pub const Error = enum(i32) {
        MAX_QUANTITY = 0,
        INVALID_NAME_SIZE = 1,
        PRESET_NOT_FOUND = 2,
        UNKNOWN = 3,
        _,
    };

    pub const Success = struct {
        preset_info: ?CharacterPresetInfo = null,

        pub const _desc_table = .{
            .preset_info = fd(1, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ForgettableSpellPresetCreateRequest = struct {
    name: ManagedString = .Empty,
    symbol_id: i32 = 0,
    origin: ?PresetOrigin = null,

    pub const _desc_table = .{
        .name = fd(1, .String),
        .symbol_id = fd(2, .{ .Varint = .Simple }),
        .origin = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ForgettableSpellPresetCreateResponse = struct {
    result: ?result_union,

    pub const _result_case = enum {
        success,
        @"error",
    };
    pub const result_union = union(_result_case) {
        success: Success,
        @"error": Error,
        pub const _union_desc = .{
            .success = fd(1, .{ .SubMessage = {} }),
            .@"error" = fd(2, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .result = fd(null, .{ .OneOf = result_union }),
    };

    pub const Error = enum(i32) {
        FEATURE_DISABLED = 0,
        MAX_QUANTITY = 1,
        INVALID_NAME_SIZE = 2,
        PRESET_NOT_FOUND = 3,
        UNKNOWN = 4,
        _,
    };

    pub const Success = struct {
        preset_info: ?ForgettableSpellPresetInfo = null,

        pub const _desc_table = .{
            .preset_info = fd(1, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterPresetSetRequest = struct {
    uuid: ManagedString = .Empty,
    origin: ?PresetOrigin = null,

    pub const _desc_table = .{
        .uuid = fd(1, .String),
        .origin = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterPresetSetResponse = struct {
    is_success: bool = false,
    preset_info: ?CharacterPresetInfo = null,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
        .preset_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ForgettableSpellPresetSetRequest = struct {
    uuid: ManagedString = .Empty,
    origin: ?PresetOrigin = null,

    pub const _desc_table = .{
        .uuid = fd(1, .String),
        .origin = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ForgettableSpellPresetSetResponse = struct {
    is_success: bool = false,
    preset_info: ?ForgettableSpellPresetInfo = null,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
        .preset_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetSaveRequest = struct {
    type: com_ankama_dofus_server_game_protocol_common.PresetType = @enumFromInt(0),
    uuid: ManagedString = .Empty,

    pub const _desc_table = .{
        .type = fd(1, .{ .Varint = .Simple }),
        .uuid = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetSaveResponse = struct {
    is_success: bool = false,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterPresetResetRequest = struct {
    uuid: ManagedString = .Empty,

    pub const _desc_table = .{
        .uuid = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterPresetResetResponse = struct {
    is_success: bool = false,
    preset_info: ?CharacterPresetInfo = null,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
        .preset_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ForgettableSpellPresetResetRequest = struct {
    uuid: ManagedString = .Empty,

    pub const _desc_table = .{
        .uuid = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ForgettableSpellPresetResetResponse = struct {
    is_success: bool = false,
    preset_info: ?ForgettableSpellPresetInfo = null,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
        .preset_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetDeleteRequest = struct {
    preset_uuid: ManagedString = .Empty,
    preset_type: com_ankama_dofus_server_game_protocol_common.PresetType = @enumFromInt(0),

    pub const _desc_table = .{
        .preset_uuid = fd(1, .String),
        .preset_type = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetDeleteResponse = struct {
    is_success: bool = false,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetUseRequest = struct {
    preset_uuid: ManagedString = .Empty,
    preset_type: com_ankama_dofus_server_game_protocol_common.PresetType = @enumFromInt(0),

    pub const _desc_table = .{
        .preset_uuid = fd(1, .String),
        .preset_type = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetUseResponse = struct {
    result: ?result_union,

    pub const _result_case = enum {
        result_enum,
        missing_equipments,
    };
    pub const result_union = union(_result_case) {
        result_enum: ResultEnum,
        missing_equipments: MissingEquipments,
        pub const _union_desc = .{
            .result_enum = fd(1, .{ .Varint = .Simple }),
            .missing_equipments = fd(2, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .result = fd(null, .{ .OneOf = result_union }),
    };

    pub const ResultEnum = enum(i32) {
        OK = 0,
        ERROR_COOLDOWN = 1,
        ERROR_BAD_PRESET_UUID = 2,
        ERROR_INVALID_STATE = 3,
        ERROR_UNKNOWN = 4,
        ERROR_INVALID_DATA = 5,
        MISSING_SPELLS = 6,
        _,
    };

    pub const MissingEquipments = struct {
        missing_item_gids: ArrayList(i32),
        missing_ride_model_id: ?i32 = null,

        pub const _desc_table = .{
            .missing_item_gids = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
            .missing_ride_model_id = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetSpellUpdateRequest = struct {
    preset_uuid: ManagedString = .Empty,
    target: Target = @enumFromInt(0),
    spell_preset: ?SpellPreset = null,

    pub const _desc_table = .{
        .preset_uuid = fd(1, .String),
        .target = fd(2, .{ .Varint = .Simple }),
        .spell_preset = fd(3, .{ .SubMessage = {} }),
    };

    pub const Target = enum(i32) {
        CHARACTER = 0,
        FORGETTABLE_BASE = 1,
        FORGETTABLE_SPELL = 2,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetSpellUpdateResponse = struct {
    is_success: bool = false,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetStatUpdateRequest = struct {
    preset_uuid: ManagedString = .Empty,
    stat_by_id: ArrayList(StatByIdEntry),

    pub const _desc_table = .{
        .preset_uuid = fd(1, .String),
        .stat_by_id = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const StatByIdEntry = struct {
        key: i32 = 0,
        value: i32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetStatUpdateResponse = struct {
    is_success: bool = false,
    characteristics_info: ?CharacteristicsInfo = null,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
        .characteristics_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetEquipmentUpdateRequest = struct {
    character_preset_uuid: ManagedString = .Empty,
    action: ?action_union,

    pub const _action_case = enum {
        set_item,
        remove_item,
        set_ride,
        remove_ride,
    };
    pub const action_union = union(_action_case) {
        set_item: SetItem,
        remove_item: RemoveItem,
        set_ride: SetRide,
        remove_ride: RemoveRide,
        pub const _union_desc = .{
            .set_item = fd(2, .{ .SubMessage = {} }),
            .remove_item = fd(3, .{ .SubMessage = {} }),
            .set_ride = fd(4, .{ .SubMessage = {} }),
            .remove_ride = fd(5, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .character_preset_uuid = fd(1, .String),
        .action = fd(null, .{ .OneOf = action_union }),
    };

    pub const SetItem = struct {
        position: i32 = 0,
        item_uid: i32 = 0,

        pub const _desc_table = .{
            .position = fd(1, .{ .Varint = .Simple }),
            .item_uid = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const RemoveItem = struct {
        position: i32 = 0,

        pub const _desc_table = .{
            .position = fd(1, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const SetRide = struct {
        pub const _desc_table = .{};

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const RemoveRide = struct {
        pub const _desc_table = .{};

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetEquipmentUpdateResponse = struct {
    is_success: bool = false,
    equipment_refresh: ?EquipmentRefresh = null,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
        .equipment_refresh = fd(2, .{ .SubMessage = {} }),
    };

    pub const EquipmentRefresh = struct {
        characteristics_info: ?CharacteristicsInfo = null,
        preset_look: ?PresetLook = null,

        pub const _desc_table = .{
            .characteristics_info = fd(1, .{ .SubMessage = {} }),
            .preset_look = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetRenameRequest = struct {
    preset_uuid: ManagedString = .Empty,
    preset_type: com_ankama_dofus_server_game_protocol_common.PresetType = @enumFromInt(0),
    name: ManagedString = .Empty,

    pub const _desc_table = .{
        .preset_uuid = fd(1, .String),
        .preset_type = fd(2, .{ .Varint = .Simple }),
        .name = fd(3, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetRenameResponse = struct {
    result: Result = @enumFromInt(0),

    pub const _desc_table = .{
        .result = fd(1, .{ .Varint = .Simple }),
    };

    pub const Result = enum(i32) {
        SUCCESS = 0,
        PRESET_NOT_FOUND = 1,
        ERROR_NAME_SIZE = 2,
        UNKNOWN_ERROR = 3,
        FEATURE_DISABLED = 4,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetSymbolUpdateRequest = struct {
    preset_uuid: ManagedString = .Empty,
    preset_type: com_ankama_dofus_server_game_protocol_common.PresetType = @enumFromInt(0),
    symbol_id: i32 = 0,

    pub const _desc_table = .{
        .preset_uuid = fd(1, .String),
        .preset_type = fd(2, .{ .Varint = .Simple }),
        .symbol_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetSymbolUpdateResponse = struct {
    is_success: bool = false,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetSetFavoriteRequest = struct {
    preset_uuid: ManagedString = .Empty,
    preset_type: com_ankama_dofus_server_game_protocol_common.PresetType = @enumFromInt(0),
    is_favorite: bool = false,

    pub const _desc_table = .{
        .preset_uuid = fd(1, .String),
        .preset_type = fd(2, .{ .Varint = .Simple }),
        .is_favorite = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetSetFavoriteResponse = struct {
    is_success: bool = false,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterPresetInfoRequest = struct {
    preset_uuid: ManagedString = .Empty,

    pub const _desc_table = .{
        .preset_uuid = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterPresetInfoResponse = struct {
    is_success: bool = false,
    info: ?CharacterPresetInfo = null,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
        .info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ForgettableSpellPresetInfoRequest = struct {
    preset_uuid: ManagedString = .Empty,

    pub const _desc_table = .{
        .preset_uuid = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ForgettableSpellPresetInfoResponse = struct {
    is_success: bool = false,
    info: ?ForgettableSpellPresetInfo = null,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
        .info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetOutfitUpdateRequest = struct {
    preset_uuid: ManagedString = .Empty,
    outfit_uuid: ?ManagedString = null,

    pub const _desc_table = .{
        .preset_uuid = fd(1, .String),
        .outfit_uuid = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetOutfitUpdateResponse = struct {
    is_success: bool = false,
    updated_look: ?PresetLook = null,

    pub const _desc_table = .{
        .is_success = fd(1, .{ .Varint = .Simple }),
        .updated_look = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetItemUpdateEvent = struct {
    is_linked: bool = false,
    item_position_by_preset_uuid: ArrayList(ItemPositionByPresetUuidEntry),
    item_uid: i32 = 0,

    pub const _desc_table = .{
        .is_linked = fd(1, .{ .Varint = .Simple }),
        .item_position_by_preset_uuid = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .item_uid = fd(3, .{ .Varint = .Simple }),
    };

    pub const ItemPositionByPresetUuidEntry = struct {
        key: ManagedString = .Empty,
        value: i32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PresetListEvent = struct {
    character_preset_info_by_id: ArrayList(CharacterPresetInfoByIdEntry),
    forgettable_spell_preset_info_by_id: ArrayList(ForgettableSpellPresetInfoByIdEntry),

    pub const _desc_table = .{
        .character_preset_info_by_id = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .forgettable_spell_preset_info_by_id = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const CharacterPresetInfoByIdEntry = struct {
        key: ManagedString = .Empty,
        value: ?CharacterPresetInfo = null,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const ForgettableSpellPresetInfoByIdEntry = struct {
        key: ManagedString = .Empty,
        value: ?ForgettableSpellPresetInfo = null,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterPresetCurrentStateRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterPresetCurrentStateResponse = struct {
    preset: ?CharacterPresetInfo = null,

    pub const _desc_table = .{
        .preset = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
