// Code generated by protoc-gen-zig
///! package com.ankama.dofus.server.game.protocol.character.management
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;
/// import package com.ankama.dofus.server.game.protocol.common
const com_ankama_dofus_server_game_protocol_common = @import("../common.pb.zig");

pub const PrepareCharacterDeletionRequest = struct {
    character_id: i64 = 0,

    pub const _desc_table = .{
        .character_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterDeletionRequest = struct {
    character_id: i64 = 0,
    secret_answer_hash: ManagedString = .Empty,

    pub const _desc_table = .{
        .character_id = fd(1, .{ .Varint = .Simple }),
        .secret_answer_hash = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CanCreateCharacterRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterCreationRequest = struct {
    modelingInformation: ?com_ankama_dofus_server_game_protocol_common.CharacterRemodelingInformation = null,

    pub const _desc_table = .{
        .modelingInformation = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterReplayRequest = struct {
    character_id: i64 = 0,

    pub const _desc_table = .{
        .character_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterReplayWithRemodelRequest = struct {
    character_id: i64 = 0,
    remodelingInformation: ?com_ankama_dofus_server_game_protocol_common.Character = null,

    pub const _desc_table = .{
        .character_id = fd(1, .{ .Varint = .Simple }),
        .remodelingInformation = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterSelectionRequest = struct {
    character_id: i64 = 0,

    pub const _desc_table = .{
        .character_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterSelectionWithRemodelRequest = struct {
    character_id: i64 = 0,
    remodelingInformation: ?com_ankama_dofus_server_game_protocol_common.Character = null,

    pub const _desc_table = .{
        .character_id = fd(1, .{ .Varint = .Simple }),
        .remodelingInformation = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterListRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterForceSelectionReadyRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterFirstSelectionRequest = struct {
    character_id: i64 = 0,
    do_tutorial: bool = false,

    pub const _desc_table = .{
        .character_id = fd(1, .{ .Varint = .Simple }),
        .do_tutorial = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterNameSuggestionRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CanCharacterBeCreatedResultEvent = struct {
    result: bool = false,

    pub const _desc_table = .{
        .result = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterCreationResultEvent = struct {
    result: CharacterCreationResult = @enumFromInt(0),
    reason: NameCompliance = @enumFromInt(0),

    pub const _desc_table = .{
        .result = fd(1, .{ .Varint = .Simple }),
        .reason = fd(2, .{ .Varint = .Simple }),
    };

    pub const CharacterCreationResult = enum(i32) {
        CREATE_OK = 0,
        CREATE_ERROR_NO_REASON = 1,
        CREATE_ERROR_INVALID_NAME = 2,
        CREATE_ERROR_TOO_MANY_CHARACTERS = 3,
        CREATE_ERROR_NOT_ALLOWED = 4,
        CREATE_ERROR_NEW_PLAYER_NOT_ALLOWED = 5,
        _,
    };

    pub const NameCompliance = enum(i32) {
        NAME_OK = 0,
        NAME_ERROR_SERVICE_UNAVAILABLE = 1,
        NAME_ERROR_ALREADY_EXISTS = 2,
        NAME_ERROR_BAD_ALPHABET = 3,
        NAME_ERROR_BAD_LENGTH = 4,
        NAME_ERROR_BAD_CHAR = 5,
        NAME_ERROR_INVALID_DASH_POSITION = 6,
        NAME_ERROR_NAME_WITH_BAD_CASE = 7,
        NAME_ERROR_TOO_MANY_CONSECUTIVE_IDENTICAL = 8,
        NAME_ERROR_TOO_MANY_SPECIAL = 9,
        NAME_ERROR_FORBIDDEN = 10,
        NAME_ERROR_RESERVED = 11,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterDeletionErrorEvent = struct {
    reason: CharacterDeletionError = @enumFromInt(0),

    pub const _desc_table = .{
        .reason = fd(1, .{ .Varint = .Simple }),
    };

    pub const CharacterDeletionError = enum(i32) {
        DELETE_ERROR_NO_REASON = 0,
        DELETE_ERROR_TOO_MANY_CHAR_DELETED = 1,
        DELETE_ERROR_BAD_SECRET_ANSWER = 2,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterSelectionEvent = struct {
    result: ?result_union,

    pub const _result_case = enum {
        @"error",
        success,
    };
    pub const result_union = union(_result_case) {
        @"error": Error,
        success: Success,
        pub const _union_desc = .{
            .@"error" = fd(1, .{ .SubMessage = {} }),
            .success = fd(2, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .result = fd(null, .{ .OneOf = result_union }),
    };

    pub const Error = struct {
        pub const _desc_table = .{};

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const Success = struct {
        character: ?com_ankama_dofus_server_game_protocol_common.Character = null,
        collect_stats: bool = false,

        pub const _desc_table = .{
            .character = fd(1, .{ .SubMessage = {} }),
            .collect_stats = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterListWithRemodelingEvent = struct {
    characters: ArrayList(com_ankama_dofus_server_game_protocol_common.Character),
    characters_to_remodel: ArrayList(com_ankama_dofus_server_game_protocol_common.Character),

    pub const _desc_table = .{
        .characters = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .characters_to_remodel = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterListEvent = struct {
    characters: ArrayList(com_ankama_dofus_server_game_protocol_common.Character),

    pub const _desc_table = .{
        .characters = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterLoadingCompleteEvent = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterNameSuggestionEvent = struct {
    suggestion: ManagedString = .Empty,

    pub const _desc_table = .{
        .suggestion = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterNameGenerationFailedEvent = struct {
    reason: NameGenerationFailureReason = @enumFromInt(0),

    pub const _desc_table = .{
        .reason = fd(1, .{ .Varint = .Simple }),
    };

    pub const NameGenerationFailureReason = enum(i32) {
        NAME_GENERATOR_RETRY_TOO_SHORT = 0,
        NAME_GENERATOR_UNAVAILABLE = 1,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterDeletionPrepareEvent = struct {
    character_id: i64 = 0,
    name: ManagedString = .Empty,
    secret_question: ManagedString = .Empty,
    need_secret_answer: bool = false,

    pub const _desc_table = .{
        .character_id = fd(1, .{ .Varint = .Simple }),
        .name = fd(2, .String),
        .secret_question = fd(3, .String),
        .need_secret_answer = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterForceSelectionEvent = struct {
    character_id: i64 = 0,

    pub const _desc_table = .{
        .character_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterListErrorEvent = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterCapabilitiesEvent = struct {
    guild_emblem_symbol_category: i32 = 0,

    pub const _desc_table = .{
        .guild_emblem_symbol_category = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterChangeBreedRequest = struct {
    breed_id: i32 = 0,
    gender: com_ankama_dofus_server_game_protocol_common.Gender = @enumFromInt(0),
    colors: ArrayList(i32),
    cosmetic_id: i32 = 0,
    object_id: i32 = 0,

    pub const _desc_table = .{
        .breed_id = fd(1, .{ .Varint = .Simple }),
        .gender = fd(2, .{ .Varint = .Simple }),
        .colors = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .cosmetic_id = fd(4, .{ .Varint = .Simple }),
        .object_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
