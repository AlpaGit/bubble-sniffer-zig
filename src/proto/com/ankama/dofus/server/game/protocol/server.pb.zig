// Code generated by protoc-gen-zig
///! package com.ankama.dofus.server.game.protocol.server
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;
/// import package com.ankama.dofus.server.game.protocol.common
const com_ankama_dofus_server_game_protocol_common = @import("common.pb.zig");

pub const ServerSettingsEvent = struct {
    language: ManagedString = .Empty,
    community: i32 = 0,
    game_type: com_ankama_dofus_server_game_protocol_common.ServerType = @enumFromInt(0),
    is_mono_account: bool = false,
    arena_leave_ban_time: i32 = 0,
    item_max_level: i32 = 0,
    has_free_autopilot: bool = false,

    pub const _desc_table = .{
        .language = fd(1, .String),
        .community = fd(2, .{ .Varint = .Simple }),
        .game_type = fd(3, .{ .Varint = .Simple }),
        .is_mono_account = fd(4, .{ .Varint = .Simple }),
        .arena_leave_ban_time = fd(5, .{ .Varint = .Simple }),
        .item_max_level = fd(6, .{ .Varint = .Simple }),
        .has_free_autopilot = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ServerSessionConstantsEvent = struct {
    variables: ArrayList(ServerSessionConstant),

    pub const _desc_table = .{
        .variables = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const ServerSessionConstant = struct {
        id: i32 = 0,
        value: i64 = 0,

        pub const _desc_table = .{
            .id = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ServerExperienceModifierEvent = struct {
    experience_percentage: i32 = 0,

    pub const _desc_table = .{
        .experience_percentage = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
