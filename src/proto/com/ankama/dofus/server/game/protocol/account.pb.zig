// Code generated by protoc-gen-zig
///! package com.ankama.dofus.server.game.protocol.account
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;
/// import package com.ankama.dofus.server.game.protocol.common
const com_ankama_dofus_server_game_protocol_common = @import("common.pb.zig");

pub const AccountInformationUpdateEvent = struct {
    subscription_end_date: i64 = 0,

    pub const _desc_table = .{
        .subscription_end_date = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AccountSubscriptionElapsedDurationUpdateEvent = struct {
    subscription_elapsed_duration: i64 = 0,

    pub const _desc_table = .{
        .subscription_elapsed_duration = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AccountCapabilitiesEvent = struct {
    account_id: i64 = 0,
    tutorial_available: bool = false,
    status: com_ankama_dofus_server_game_protocol_common.Hierarchy = @enumFromInt(0),
    can_create_new_character: bool = false,

    pub const _desc_table = .{
        .account_id = fd(1, .{ .Varint = .Simple }),
        .tutorial_available = fd(2, .{ .Varint = .Simple }),
        .status = fd(3, .{ .Varint = .Simple }),
        .can_create_new_character = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuestLimitationEvent = struct {
    reason: GuestLimitation = @enumFromInt(0),

    pub const _desc_table = .{
        .reason = fd(1, .{ .Varint = .Simple }),
    };

    pub const GuestLimitation = enum(i32) {
        LIMITED_TO_REGISTERED = 0,
        LIMIT_ON_JOB_XP = 1,
        LIMIT_ON_JOB_USE = 2,
        LIMIT_ON_MAP = 3,
        LIMIT_ON_ITEM = 4,
        LIMIT_ON_CHAT = 5,
        LIMIT_ON_GUILD = 6,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuestModeEvent = struct {
    effective: bool = false,

    pub const _desc_table = .{
        .effective = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SubscriptionLimitationEvent = struct {
    reason: SubscriptionRequired = @enumFromInt(0),

    pub const _desc_table = .{
        .reason = fd(1, .{ .Varint = .Simple }),
    };

    pub const SubscriptionRequired = enum(i32) {
        LIMITED_TO_SUBSCRIBER = 0,
        LIMIT_ON_JOB_XP = 1,
        LIMIT_ON_JOB_USE = 2,
        LIMIT_ON_MAP = 3,
        LIMIT_ON_ITEM = 4,
        LIMIT_ON_HAVEN_BAG = 5,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SubscriptionZoneEvent = struct {
    effective: bool = false,

    pub const _desc_table = .{
        .effective = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
