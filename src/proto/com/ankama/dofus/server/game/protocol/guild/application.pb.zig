// Code generated by protoc-gen-zig
///! package com.ankama.dofus.server.game.protocol.guild.application
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;
/// import package com.ankama.dofus.server.game.protocol.common
const com_ankama_dofus_server_game_protocol_common = @import("../common.pb.zig");

pub const GuildApplicationSubmitRequest = struct {
    apply_text: ManagedString = .Empty,
    guild_id: i32 = 0,
    time_spent: i32 = 0,
    language_filter: ManagedString = .Empty,
    ambiance_filter: ManagedString = .Empty,
    play_time_filter: ManagedString = .Empty,
    interest_filter: ManagedString = .Empty,
    min_max_guild_level_filter: ManagedString = .Empty,
    recruitment_type_filter: ManagedString = .Empty,
    min_max_character_level_filter: ManagedString = .Empty,
    min_max_achievement_filter: ManagedString = .Empty,
    search_name_filter: ManagedString = .Empty,
    last_sort_filter: ManagedString = .Empty,

    pub const _desc_table = .{
        .apply_text = fd(1, .String),
        .guild_id = fd(2, .{ .Varint = .Simple }),
        .time_spent = fd(3, .{ .Varint = .Simple }),
        .language_filter = fd(4, .String),
        .ambiance_filter = fd(5, .String),
        .play_time_filter = fd(6, .String),
        .interest_filter = fd(7, .String),
        .min_max_guild_level_filter = fd(8, .String),
        .recruitment_type_filter = fd(9, .String),
        .min_max_character_level_filter = fd(10, .String),
        .min_max_achievement_filter = fd(11, .String),
        .search_name_filter = fd(12, .String),
        .last_sort_filter = fd(13, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationUpdateRequest = struct {
    apply_text: ManagedString = .Empty,
    guild_id: i32 = 0,

    pub const _desc_table = .{
        .apply_text = fd(1, .String),
        .guild_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationDeleteRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationListenRequest = struct {
    listen: bool = false,

    pub const _desc_table = .{
        .listen = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationGetOwnRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationsRequest = struct {
    offset: i64 = 0,
    count: i32 = 0,

    pub const _desc_table = .{
        .offset = fd(1, .{ .Varint = .Simple }),
        .count = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationAnswerRequest = struct {
    accepted: bool = false,
    player_id: i64 = 0,

    pub const _desc_table = .{
        .accepted = fd(1, .{ .Varint = .Simple }),
        .player_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationPresenceRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationDeletedEvent = struct {
    deleted: bool = false,

    pub const _desc_table = .{
        .deleted = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationPlayerEvent = struct {
    application: ?ApplicationInformation = null,

    pub const _desc_table = .{
        .application = fd(1, .{ .SubMessage = {} }),
    };

    pub const ApplicationInformation = struct {
        guild_information: ?com_ankama_dofus_server_game_protocol_common.GuildInformation = null,
        apply: ?com_ankama_dofus_server_game_protocol_common.SocialApplicationInformation = null,

        pub const _desc_table = .{
            .guild_information = fd(1, .{ .SubMessage = {} }),
            .apply = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationAnswerEvent = struct {
    accepted: bool = false,
    guild_information: ?com_ankama_dofus_server_game_protocol_common.GuildInformation = null,

    pub const _desc_table = .{
        .accepted = fd(1, .{ .Varint = .Simple }),
        .guild_information = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationsEvent = struct {
    offset: i64 = 0,
    count: i64 = 0,
    total: i64 = 0,
    applies: ArrayList(com_ankama_dofus_server_game_protocol_common.SocialApplicationInformation),

    pub const _desc_table = .{
        .offset = fd(1, .{ .Varint = .Simple }),
        .count = fd(2, .{ .Varint = .Simple }),
        .total = fd(3, .{ .Varint = .Simple }),
        .applies = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationModifiedEvent = struct {
    application: ?com_ankama_dofus_server_game_protocol_common.SocialApplicationInformation = null,
    state: com_ankama_dofus_server_game_protocol_common.SocialApplicationState = @enumFromInt(0),
    player_id: i64 = 0,

    pub const _desc_table = .{
        .application = fd(1, .{ .SubMessage = {} }),
        .state = fd(2, .{ .Varint = .Simple }),
        .player_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationReceivedEvent = struct {
    player_name: ManagedString = .Empty,
    player_id: i64 = 0,

    pub const _desc_table = .{
        .player_name = fd(1, .String),
        .player_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GuildApplicationPresenceEvent = struct {
    is_application: bool = false,

    pub const _desc_table = .{
        .is_application = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
