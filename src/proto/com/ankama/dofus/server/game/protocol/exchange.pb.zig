// Code generated by protoc-gen-zig
///! package com.ankama.dofus.server.game.protocol.exchange
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;
/// import package com.ankama.dofus.server.game.protocol.common
const com_ankama_dofus_server_game_protocol_common = @import("common.pb.zig");

pub const ExchangeObjectMoveRequest = struct {
    object_uid: i32 = 0,
    quantity: i32 = 0,

    pub const _desc_table = .{
        .object_uid = fd(1, .{ .Varint = .Simple }),
        .quantity = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeSetCraftRecipeRequest = struct {
    object_uid: i32 = 0,

    pub const _desc_table = .{
        .object_uid = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectUseInWorkshopRequest = struct {
    object_uid: i32 = 0,
    quantity: i32 = 0,

    pub const _desc_table = .{
        .object_uid = fd(1, .{ .Varint = .Simple }),
        .quantity = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectMoveToTabRequest = struct {
    object_uid: i32 = 0,
    quantity: i32 = 0,
    tab_number: i32 = 0,

    pub const _desc_table = .{
        .object_uid = fd(1, .{ .Varint = .Simple }),
        .quantity = fd(2, .{ .Varint = .Simple }),
        .tab_number = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectMovePricedRequest = struct {
    object_uid: i32 = 0,
    quantity: i32 = 0,
    price: i64 = 0,

    pub const _desc_table = .{
        .object_uid = fd(1, .{ .Varint = .Simple }),
        .quantity = fd(2, .{ .Varint = .Simple }),
        .price = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectModifyPricedRequest = struct {
    object_uid: i32 = 0,
    quantity: i32 = 0,
    price: i64 = 0,

    pub const _desc_table = .{
        .object_uid = fd(1, .{ .Varint = .Simple }),
        .quantity = fd(2, .{ .Varint = .Simple }),
        .price = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectTransferAllToInventoryRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectTransferListToInventoryRequest = struct {
    objects_uid: ArrayList(i32),

    pub const _desc_table = .{
        .objects_uid = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectTransferListWithQuantityToInventoryRequest = struct {
    objects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectUidWithQuantity),

    pub const _desc_table = .{
        .objects = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectTransferExistingToInventoryRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectTransferAllFromInventoryRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectTransferListFromInventoryRequest = struct {
    objects_uid: ArrayList(i32),

    pub const _desc_table = .{
        .objects_uid = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectTransferTypeFromInventoryRequest = struct {
    object_type: i32 = 0,

    pub const _desc_table = .{
        .object_type = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectTransferExistingFromInventoryRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMoveKamaRequest = struct {
    quantity: i64 = 0,

    pub const _desc_table = .{
        .quantity = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeCraftCountRequest = struct {
    count: i32 = 0,

    pub const _desc_table = .{
        .count = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeReplayStopRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMultiCraftSetCrafterCanUseHisResourcesRequest = struct {
    allow: bool = false,

    pub const _desc_table = .{
        .allow = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangePlayerRequest = struct {
    target_id: i64 = 0,

    pub const _desc_table = .{
        .target_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangePlayerMultiCraftRequest = struct {
    exchange_type: com_ankama_dofus_server_game_protocol_common.ExchangeType = @enumFromInt(0),
    target_id: i64 = 0,
    skill_id: i32 = 0,

    pub const _desc_table = .{
        .exchange_type = fd(1, .{ .Varint = .Simple }),
        .target_id = fd(2, .{ .Varint = .Simple }),
        .skill_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMountRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeTaxCollectorRequest = struct {
    tax_collector_uuid: ManagedString = .Empty,

    pub const _desc_table = .{
        .tax_collector_uuid = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeAcceptRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeReadyRequest = struct {
    ready: bool = false,
    step: i32 = 0,

    pub const _desc_table = .{
        .ready = fd(1, .{ .Varint = .Simple }),
        .step = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeFocusedReadyRequest = struct {
    ready: bool = false,
    step: i32 = 0,
    focus_action_id: i32 = 0,

    pub const _desc_table = .{
        .ready = fd(1, .{ .Varint = .Simple }),
        .step = fd(2, .{ .Varint = .Simple }),
        .focus_action_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeCraftPaymentModificationRequest = struct {
    quantity: i64 = 0,

    pub const _desc_table = .{
        .quantity = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBuyRequest = struct {
    object_uid: i32 = 0,
    quantity: i32 = 0,

    pub const _desc_table = .{
        .object_uid = fd(1, .{ .Varint = .Simple }),
        .quantity = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeSellRequest = struct {
    object_uid: i32 = 0,
    quantity: i32 = 0,

    pub const _desc_table = .{
        .object_uid = fd(1, .{ .Varint = .Simple }),
        .quantity = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectsSellRequest = struct {
    objects: ArrayList(ExchangeObject),

    pub const _desc_table = .{
        .objects = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const ExchangeObject = struct {
        object_uid: i32 = 0,
        quantity: i32 = 0,

        pub const _desc_table = .{
            .object_uid = fd(1, .{ .Varint = .Simple }),
            .quantity = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JobBookSubscribeRequest = struct {
    jobs_id: ArrayList(i32),

    pub const _desc_table = .{
        .jobs_id = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeHandleMountsRequest = struct {
    action_type: ExchangeHandleMountStableType = @enumFromInt(0),
    rides_id: ArrayList(i32),

    pub const _desc_table = .{
        .action_type = fd(1, .{ .Varint = .Simple }),
        .rides_id = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub const ExchangeHandleMountStableType = enum(i32) {
        EXCHANGE_MOUNT_STABLES_PUT = 0,
        EXCHANGE_MOUNT_STABLES_GET = 1,
        EXCHANGE_MOUNT_STABLES_FREE = 2,
        EXCHANGE_MOUNT_STABLES_CERTIF = 3,
        EXCHANGE_MOUNT_STABLES_UNCERTIF = 4,
        EXCHANGE_MOUNT_PADDOCK_PUT = 5,
        EXCHANGE_MOUNT_PADDOCK_GET = 6,
        EXCHANGE_MOUNT_PADDOCK_FREE = 7,
        EXCHANGE_EQUIPPED_MOUNT_PADDOCK_PUT = 8,
        EXCHANGE_EQUIPPED_MOUNT_PADDOCK_GET = 9,
        EXCHANGE_EQUIPPED_FREE = 10,
        EXCHANGE_CERTIFICATE_FREE = 11,
        EXCHANGE_EQUIPPED_CERTIF = 12,
        EXCHANGE_MOUNT_PADDOCK_CERTIF = 13,
        EXCHANGE_UNCERTIF_TO_EQUIPPED = 14,
        EXCHANGE_UNCERTIF_TO_PADDOCK = 15,
        EXCHANGE_MOUNT_STABLES_STERILIZE = 16,
        EXCHANGE_EQUIPPED_STERILIZE = 17,
        EXCHANGE_MOUNT_PADDOCK_STERILIZE = 18,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseSearchRequest = struct {
    object_gid: i32 = 0,
    follow: bool = false,

    pub const _desc_table = .{
        .object_gid = fd(1, .{ .Varint = .Simple }),
        .follow = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseListRequest = struct {
    object_gid: i32 = 0,
    follow: bool = false,

    pub const _desc_table = .{
        .object_gid = fd(1, .{ .Varint = .Simple }),
        .follow = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseTypeRequest = struct {
    type_id: i32 = 0,
    follow: bool = false,

    pub const _desc_table = .{
        .type_id = fd(1, .{ .Varint = .Simple }),
        .follow = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseBuyRequest = struct {
    bid_item_uid: i32 = 0,
    quantity: i32 = 0,
    price: i64 = 0,

    pub const _desc_table = .{
        .bid_item_uid = fd(1, .{ .Varint = .Simple }),
        .quantity = fd(2, .{ .Varint = .Simple }),
        .price = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHousePriceRequest = struct {
    object_gid: i32 = 0,

    pub const _desc_table = .{
        .object_gid = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeTaxCollectorEquipmentRequest = struct {
    tax_collector_uid: ManagedString = .Empty,

    pub const _desc_table = .{
        .tax_collector_uid = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ObjectAveragePricesRequest = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMoneyMovementLimitEvent = struct {
    limit: i64 = 0,

    pub const _desc_table = .{
        .limit = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeCraftCountModifiedEvent = struct {
    count: i32 = 0,

    pub const _desc_table = .{
        .count = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectsAddedEvent = struct {
    remote: bool = false,
    objects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectItemInventory),
    fm_power: ?f32 = null,

    pub const _desc_table = .{
        .remote = fd(1, .{ .Varint = .Simple }),
        .objects = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .fm_power = fd(3, .{ .FixedInt = .I32 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectRemovedEvent = struct {
    remote: bool = false,
    bid_item_uid: i32 = 0,

    pub const _desc_table = .{
        .remote = fd(1, .{ .Varint = .Simple }),
        .bid_item_uid = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectsRemovedEvent = struct {
    remote: bool = false,
    bid_items_uid: ArrayList(i32),

    pub const _desc_table = .{
        .remote = fd(1, .{ .Varint = .Simple }),
        .bid_items_uid = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectsModifiedEvent = struct {
    remote: bool = false,
    objects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectItemInventory),

    pub const _desc_table = .{
        .remote = fd(1, .{ .Varint = .Simple }),
        .objects = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectPutInBagEvent = struct {
    remote: bool = false,
    object: ?com_ankama_dofus_server_game_protocol_common.ObjectItemInventory = null,

    pub const _desc_table = .{
        .remote = fd(1, .{ .Varint = .Simple }),
        .object = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectRemovedFromBagEvent = struct {
    remote: bool = false,
    object_uid: i32 = 0,

    pub const _desc_table = .{
        .remote = fd(1, .{ .Varint = .Simple }),
        .object_uid = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeObjectModifiedInBagEvent = struct {
    remote: bool = false,
    object: ?com_ankama_dofus_server_game_protocol_common.ObjectItemInventory = null,

    pub const _desc_table = .{
        .remote = fd(1, .{ .Varint = .Simple }),
        .object = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeKamaModifiedEvent = struct {
    remote: bool = false,
    quantity: i64 = 0,

    pub const _desc_table = .{
        .remote = fd(1, .{ .Varint = .Simple }),
        .quantity = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangePodsModifiedEvent = struct {
    remote: bool = false,
    current_weight: i32 = 0,
    max_weight: i32 = 0,

    pub const _desc_table = .{
        .remote = fd(1, .{ .Varint = .Simple }),
        .current_weight = fd(2, .{ .Varint = .Simple }),
        .max_weight = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMultiCraftCrafterCanUseHisResourcesEvent = struct {
    allowed: bool = false,

    pub const _desc_table = .{
        .allowed = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeRequestedTradeEvent = struct {
    exchange_type: com_ankama_dofus_server_game_protocol_common.ExchangeType = @enumFromInt(0),
    source_id: i64 = 0,
    target_id: i64 = 0,

    pub const _desc_table = .{
        .exchange_type = fd(1, .{ .Varint = .Simple }),
        .source_id = fd(2, .{ .Varint = .Simple }),
        .target_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeStartedEvent = struct {
    exchange_type: com_ankama_dofus_server_game_protocol_common.ExchangeType = @enumFromInt(0),

    pub const _desc_table = .{
        .exchange_type = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeStartedWithPodsEvent = struct {
    exchange_type: com_ankama_dofus_server_game_protocol_common.ExchangeType = @enumFromInt(0),
    first_character_id: i64 = 0,
    first_character_current_weight: i32 = 0,
    first_character_max_weight: i32 = 0,
    second_character_id: i64 = 0,
    second_character_current_weight: i32 = 0,
    second_character_max_weight: i32 = 0,

    pub const _desc_table = .{
        .exchange_type = fd(1, .{ .Varint = .Simple }),
        .first_character_id = fd(2, .{ .Varint = .Simple }),
        .first_character_current_weight = fd(3, .{ .Varint = .Simple }),
        .first_character_max_weight = fd(4, .{ .Varint = .Simple }),
        .second_character_id = fd(5, .{ .Varint = .Simple }),
        .second_character_current_weight = fd(6, .{ .Varint = .Simple }),
        .second_character_max_weight = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeStartedWithStorageEvent = struct {
    exchange_type: com_ankama_dofus_server_game_protocol_common.ExchangeType = @enumFromInt(0),
    storage_max_slot: i32 = 0,

    pub const _desc_table = .{
        .exchange_type = fd(1, .{ .Varint = .Simple }),
        .storage_max_slot = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeStartedWithMultiTabStorageEvent = struct {
    exchange_type: com_ankama_dofus_server_game_protocol_common.ExchangeType = @enumFromInt(0),
    storage_max_slot: i32 = 0,
    tab_number: i32 = 0,

    pub const _desc_table = .{
        .exchange_type = fd(1, .{ .Varint = .Simple }),
        .storage_max_slot = fd(2, .{ .Varint = .Simple }),
        .tab_number = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseBuyResultEvent = struct {
    bid_item_uid: i32 = 0,
    bought: bool = false,

    pub const _desc_table = .{
        .bid_item_uid = fd(1, .{ .Varint = .Simple }),
        .bought = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseItemAddedEvent = struct {
    item: ?BidItem = null,
    price: i64 = 0,
    unsold_delay: i64 = 0,

    pub const _desc_table = .{
        .item = fd(1, .{ .SubMessage = {} }),
        .price = fd(2, .{ .Varint = .Simple }),
        .unsold_delay = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseItemRemovedEvent = struct {
    sell_id: i32 = 0,

    pub const _desc_table = .{
        .sell_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseGenericItemAddedEvent = struct {
    object_gid: i32 = 0,

    pub const _desc_table = .{
        .object_gid = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseGenericItemRemovedEvent = struct {
    object_gid: i32 = 0,

    pub const _desc_table = .{
        .object_gid = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseInListAddedEvent = struct {
    bid_item_uid: i32 = 0,
    object_gid: i32 = 0,
    object_type: i32 = 0,
    effects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectEffect),
    prices: ArrayList(i64),

    pub const _desc_table = .{
        .bid_item_uid = fd(1, .{ .Varint = .Simple }),
        .object_gid = fd(2, .{ .Varint = .Simple }),
        .object_type = fd(3, .{ .Varint = .Simple }),
        .effects = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .prices = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseInListUpdatedEvent = struct {
    bid_item_uid: i32 = 0,
    object_gid: i32 = 0,
    object_type: i32 = 0,
    effects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectEffect),
    prices: ArrayList(i64),

    pub const _desc_table = .{
        .bid_item_uid = fd(1, .{ .Varint = .Simple }),
        .object_gid = fd(2, .{ .Varint = .Simple }),
        .object_type = fd(3, .{ .Varint = .Simple }),
        .effects = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .prices = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseInListRemovedEvent = struct {
    bid_item_uid: i32 = 0,
    object_gid: i32 = 0,
    object_type: i32 = 0,

    pub const _desc_table = .{
        .bid_item_uid = fd(1, .{ .Varint = .Simple }),
        .object_gid = fd(2, .{ .Varint = .Simple }),
        .object_type = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseUnsoldItemsEvent = struct {
    objects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectGidWithQuantity),

    pub const _desc_table = .{
        .objects = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidHouseOfflineSoldItemsEvent = struct {
    bid_house_items: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectGidWithQuantity),

    pub const _desc_table = .{
        .bid_house_items = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeReadyEvent = struct {
    character_id: i64 = 0,
    ready: bool = false,

    pub const _desc_table = .{
        .character_id = fd(1, .{ .Varint = .Simple }),
        .ready = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeStoppedEvent = struct {
    character_id: i64 = 0,

    pub const _desc_table = .{
        .character_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeErrorEvent = struct {
    error_type: ExchangeError = @enumFromInt(0),

    pub const _desc_table = .{
        .error_type = fd(1, .{ .Varint = .Simple }),
    };

    pub const ExchangeError = enum(i32) {
        REQUEST_IMPOSSIBLE = 0,
        REQUEST_CHARACTER_OCCUPIED = 1,
        REQUEST_CHARACTER_JOB_NOT_EQUIPPED = 2,
        REQUEST_CHARACTER_TOOL_TOO_FAR = 3,
        REQUEST_CHARACTER_OVERLOADED = 4,
        REQUEST_CHARACTER_NOT_SUBSCRIBER = 5,
        REQUEST_CHARACTER_GUEST = 6,
        MOUNT_PADDOCK_ERROR = 7,
        BID_SEARCH_ERROR = 8,
        SELL_ERROR = 9,
        BUY_ERROR = 10,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeLeaveEvent = struct {
    dialog_type: com_ankama_dofus_server_game_protocol_common.DialogType = @enumFromInt(0),
    success: bool = false,

    pub const _desc_table = .{
        .dialog_type = fd(1, .{ .Varint = .Simple }),
        .success = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeTaxCollectorEquipmentStartedEvent = struct {
    tax_collector_information: ?com_ankama_dofus_server_game_protocol_common.TaxCollectorInformation = null,

    pub const _desc_table = .{
        .tax_collector_information = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeNpcTradeStartedEvent = struct {
    npc_id: i64 = 0,

    pub const _desc_table = .{
        .npc_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeRunesTradeStartedEvent = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeRecycleTradeStartedEvent = struct {
    percent_to_prism: i32 = 0,
    percent_to_player: i32 = 0,
    adjacent_subareas_possessed: ArrayList(i32),
    adjacent_subareas_not_possessed: ArrayList(i32),

    pub const _desc_table = .{
        .percent_to_prism = fd(1, .{ .Varint = .Simple }),
        .percent_to_player = fd(2, .{ .Varint = .Simple }),
        .adjacent_subareas_possessed = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .adjacent_subareas_not_possessed = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeNpcShopStartedEvent = struct {
    npc_seller_id: i64 = 0,
    token_id: i32 = 0,
    objects: ArrayList(com_ankama_dofus_server_game_protocol_common.ItemMinimalInformation),

    pub const _desc_table = .{
        .npc_seller_id = fd(1, .{ .Varint = .Simple }),
        .token_id = fd(2, .{ .Varint = .Simple }),
        .objects = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMultiCraftOkEvent = struct {
    initiator_id: i64 = 0,
    other_id: i64 = 0,
    role: com_ankama_dofus_server_game_protocol_common.ExchangeType = @enumFromInt(0),

    pub const _desc_table = .{
        .initiator_id = fd(1, .{ .Varint = .Simple }),
        .other_id = fd(2, .{ .Varint = .Simple }),
        .role = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeCraftResultEvent = struct {
    result: CraftResult = @enumFromInt(0),
    complement: ?complement_union,

    pub const _complement_case = enum {
        object_gid,
        object,
    };
    pub const complement_union = union(_complement_case) {
        object_gid: i32,
        object: ExchangeCraftResultWithObjectDescription,
        pub const _union_desc = .{
            .object_gid = fd(2, .{ .Varint = .Simple }),
            .object = fd(3, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .result = fd(1, .{ .Varint = .Simple }),
        .complement = fd(null, .{ .OneOf = complement_union }),
    };

    pub const CraftResult = enum(i32) {
        IMPOSSIBLE = 0,
        FAILED = 1,
        SUCCESS = 2,
        NEUTRAL = 3,
        FORBIDDEN = 4,
        _,
    };

    pub const ExchangeCraftResultWithObjectDescription = struct {
        object: ?com_ankama_dofus_server_game_protocol_common.ObjectItem = null,
        fm_power: f32 = 0,
        magic_pool_status: ?MagicPoolStatus = null,

        pub const _desc_table = .{
            .object = fd(1, .{ .SubMessage = {} }),
            .fm_power = fd(3, .{ .FixedInt = .I32 }),
            .magic_pool_status = fd(2, .{ .Varint = .Simple }),
        };

        pub const MagicPoolStatus = enum(i32) {
            NO_CHANGE = 0,
            INCREASE = 1,
            LOSS = 2,
            _,
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMountStockStartedEvent = struct {
    objects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectItemInventory),

    pub const _desc_table = .{
        .objects = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeTaxCollectorShopStartedEvent = struct {
    objects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectItemInventory),
    kamas: i64 = 0,

    pub const _desc_table = .{
        .objects = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .kamas = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidSellerStartedEvent = struct {
    selling_conditions: ?SellingConditions = null,
    items: ArrayList(ItemToSellInBid),

    pub const _desc_table = .{
        .selling_conditions = fd(1, .{ .SubMessage = {} }),
        .items = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const ItemToSellInBid = struct {
        item: ?BidItem = null,
        price: i64 = 0,
        unsold_delay: i32 = 0,

        pub const _desc_table = .{
            .item = fd(1, .{ .SubMessage = {} }),
            .price = fd(2, .{ .Varint = .Simple }),
            .unsold_delay = fd(3, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BidItem = struct {
    uid: i32 = 0,
    quantity: i32 = 0,
    gid: i64 = 0,
    effects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectEffect),

    pub const _desc_table = .{
        .uid = fd(1, .{ .Varint = .Simple }),
        .quantity = fd(2, .{ .Varint = .Simple }),
        .gid = fd(3, .{ .Varint = .Simple }),
        .effects = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidBuyerStartedEvent = struct {
    selling_conditions: ?SellingConditions = null,

    pub const _desc_table = .{
        .selling_conditions = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBidPriceEvent = struct {
    object_gid: i32 = 0,
    average_price: i64 = 0,
    bid_price_for_seller: ?BidPriceForSeller = null,

    pub const _desc_table = .{
        .object_gid = fd(1, .{ .Varint = .Simple }),
        .average_price = fd(2, .{ .Varint = .Simple }),
        .bid_price_for_seller = fd(3, .{ .SubMessage = {} }),
    };

    pub const BidPriceForSeller = struct {
        all_identical: bool = false,
        minimal_prices: ArrayList(i64),

        pub const _desc_table = .{
            .all_identical = fd(1, .{ .Varint = .Simple }),
            .minimal_prices = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeTypesExchangerDescriptionForUserEvent = struct {
    object_type: i32 = 0,
    type_description: ArrayList(i32),

    pub const _desc_table = .{
        .object_type = fd(1, .{ .Varint = .Simple }),
        .type_description = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeTypesItemsExchangerDescriptionForUserEvent = struct {
    object_gid: i32 = 0,
    object_type: i32 = 0,
    item_descriptions: ArrayList(BidExchangerObject),

    pub const _desc_table = .{
        .object_gid = fd(1, .{ .Varint = .Simple }),
        .object_type = fd(2, .{ .Varint = .Simple }),
        .item_descriptions = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const BidExchangerObject = struct {
        uid: i32 = 0,
        gid: i32 = 0,
        type: i32 = 0,
        effects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectEffect),
        prices: ArrayList(i64),

        pub const _desc_table = .{
            .uid = fd(1, .{ .Varint = .Simple }),
            .gid = fd(2, .{ .Varint = .Simple }),
            .type = fd(3, .{ .Varint = .Simple }),
            .effects = fd(4, .{ .List = .{ .SubMessage = {} } }),
            .prices = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeWeightEvent = struct {
    current_weight: i32 = 0,
    max_weight: i32 = 0,

    pub const _desc_table = .{
        .current_weight = fd(1, .{ .Varint = .Simple }),
        .max_weight = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeTaxCollectorGetEvent = struct {
    collector_name: ManagedString = .Empty,
    coordinates: ?com_ankama_dofus_server_game_protocol_common.MapExtendedCoordinates = null,
    user_name: ManagedString = .Empty,
    caller_id: i64 = 0,
    caller_name: ManagedString = .Empty,
    pods: i32 = 0,
    objects: ArrayList(com_ankama_dofus_server_game_protocol_common.ObjectGidWithQuantity),
    look: ?com_ankama_dofus_server_game_protocol_common.EntityLook = null,

    pub const _desc_table = .{
        .collector_name = fd(1, .String),
        .coordinates = fd(2, .{ .SubMessage = {} }),
        .user_name = fd(3, .String),
        .caller_id = fd(4, .{ .Varint = .Simple }),
        .caller_name = fd(5, .String),
        .pods = fd(6, .{ .Varint = .Simple }),
        .objects = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .look = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeBoughtEvent = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeSoldEvent = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMountWithoutPaddockStartedEvent = struct {
    stabled_mounts: ArrayList(com_ankama_dofus_server_game_protocol_common.MountData),
    paddocked_mounts: ArrayList(com_ankama_dofus_server_game_protocol_common.MountData),

    pub const _desc_table = .{
        .stabled_mounts = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .paddocked_mounts = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMountsStableAddedEvent = struct {
    mounts: ArrayList(com_ankama_dofus_server_game_protocol_common.MountData),
    new_born: bool = false,

    pub const _desc_table = .{
        .mounts = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .new_born = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMountsPaddockAddedEvent = struct {
    mounts: ArrayList(com_ankama_dofus_server_game_protocol_common.MountData),

    pub const _desc_table = .{
        .mounts = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMountsStableRemoveEvent = struct {
    mounts_id: ArrayList(i32),

    pub const _desc_table = .{
        .mounts_id = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMountsPaddockRemoveEvent = struct {
    mounts_id: ArrayList(i32),

    pub const _desc_table = .{
        .mounts_id = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMountFreeFromPaddockEvent = struct {
    name: ManagedString = .Empty,
    coordinates: ?com_ankama_dofus_server_game_protocol_common.MapCoordinates = null,
    liberator: ManagedString = .Empty,

    pub const _desc_table = .{
        .name = fd(1, .String),
        .coordinates = fd(2, .{ .SubMessage = {} }),
        .liberator = fd(3, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeItemAutoCraftStoppedEvent = struct {
    reason: ExchangeReplayStopReason = @enumFromInt(0),

    pub const _desc_table = .{
        .reason = fd(1, .{ .Varint = .Simple }),
    };

    pub const ExchangeReplayStopReason = enum(i32) {
        OK = 0,
        USER = 1,
        MISSING_RESSOURCE = 2,
        IMPOSSIBLE_MODIFICATION = 3,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeCraftStartedEvent = struct {
    skill_id: ?i32 = null,

    pub const _desc_table = .{
        .skill_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMultiCraftCrafterStartedEvent = struct {
    skill_id: i32 = 0,

    pub const _desc_table = .{
        .skill_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeMultiCraftCustomerStartedEvent = struct {
    skill_id: i32 = 0,
    crafter_job_level: i32 = 0,

    pub const _desc_table = .{
        .skill_id = fd(1, .{ .Varint = .Simple }),
        .crafter_job_level = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeCrafterJobLevelUpEvent = struct {
    crafter_job_level: i32 = 0,

    pub const _desc_table = .{
        .crafter_job_level = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeJobIndexStartedEvent = struct {
    jobs: ArrayList(i32),

    pub const _desc_table = .{
        .jobs = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeCraftPaymentModifiedEvent = struct {
    kamas: i64 = 0,

    pub const _desc_table = .{
        .kamas = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SellingConditions = struct {
    quantities: ArrayList(i32),
    types: ArrayList(i32),
    tax_percentage: f32 = 0,
    tax_modification_percentage: f32 = 0,
    max_item_level: i32 = 0,
    max_item_per_account: i32 = 0,
    npc_contextual_id: i32 = 0,
    unsold_delay: i32 = 0,

    pub const _desc_table = .{
        .quantities = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .types = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .tax_percentage = fd(3, .{ .FixedInt = .I32 }),
        .tax_modification_percentage = fd(4, .{ .FixedInt = .I32 }),
        .max_item_level = fd(5, .{ .Varint = .Simple }),
        .max_item_per_account = fd(6, .{ .Varint = .Simple }),
        .npc_contextual_id = fd(7, .{ .Varint = .Simple }),
        .unsold_delay = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ObjectAveragePricesErrorEvent = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ObjectAveragePricesEvent = struct {
    objects_average_prices: ArrayList(ObjectAveragePrice),

    pub const _desc_table = .{
        .objects_average_prices = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const ObjectAveragePrice = struct {
        object_gid: i32 = 0,
        average_price: i64 = 0,

        pub const _desc_table = .{
            .object_gid = fd(1, .{ .Varint = .Simple }),
            .average_price = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RecycleResultEvent = struct {
    prism_nuggets: i32 = 0,
    player_nuggets: i32 = 0,

    pub const _desc_table = .{
        .prism_nuggets = fd(1, .{ .Varint = .Simple }),
        .player_nuggets = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DecraftResultEvent = struct {
    results: ArrayList(DecraftedItem),

    pub const _desc_table = .{
        .results = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const DecraftedItem = struct {
        object_uid: i32 = 0,
        bonus_min: f32 = 0,
        bonus_max: f32 = 0,
        runes: ArrayList(Rune),

        pub const _desc_table = .{
            .object_uid = fd(1, .{ .Varint = .Simple }),
            .bonus_min = fd(2, .{ .FixedInt = .I32 }),
            .bonus_max = fd(3, .{ .FixedInt = .I32 }),
            .runes = fd(4, .{ .List = .{ .SubMessage = {} } }),
        };

        pub const Rune = struct {
            rune_id: i32 = 0,
            quantity: i32 = 0,

            pub const _desc_table = .{
                .rune_id = fd(1, .{ .Varint = .Simple }),
                .quantity = fd(2, .{ .Varint = .Simple }),
            };

            pub usingnamespace protobuf.MessageMixins(@This());
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
